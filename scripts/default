    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   /var/www/html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /var/www/html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

	 #location /channelPublish {
	#	# Name of variable with channel name
	#	# in this example is "channel" link as bottom:
	#	# http://example.com/channelPublish?channel=s42378fwe
	#	set $push_channel_id $arg_channel;
	#	push_publisher;
	#	# Disable message storage (message has remove after seen)
	#	push_store_messages off;
	#}


	#location /channelSubscribe {
	#	push_subscriber;
	#	push_subscriber_concurrency broadcast;
	#	
	#	# Channel id
	#	set $push_channel_id $arg_channel;
	#	
	#	# clear all access_log directives for the current level
	#        access_log off;
        #	add_header Cache-Control no-cache;
	 #       # set the Expires header to 31 December 2037 23:59:59 GMT, and the Cache-Control max-age to 10 years
        #	expires 1s;
	#	
	#	# Response type
	#	#default_type text/plain;
	#}


        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

	    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   /var/www/html;
    #        index  index.html index.htm;
    #    }
    #}

